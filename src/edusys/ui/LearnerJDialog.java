
package EduSys.UI;

import EduSys.Controller.NguoiHocController;
import EduSys.dao.impl.NguoiHocImpl;
import EduSys.entity.NguoiHoc;
import EduSys.utils.Auth;
import EduSys.utils.XDate;
import EduSys.utils.XMsgBox;
import edusys.utils.XCheck;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author acer
 */
public class LearnerJDialog extends javax.swing.JDialog implements NguoiHocController{

    int row = -1;
    public LearnerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tblTieuDe = new javax.swing.JLabel();
        Tab = new javax.swing.JTabbedPane();
        pnlCapNhat = new javax.swing.JPanel();
        pnlThongtin = new javax.swing.JPanel();
        txtMaNguoiHoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtHoTen = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDienThoai = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taGhiChu = new javax.swing.JTextField();
        pnlbtn1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        pnlbtn2 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnMovePrev = new javax.swing.JButton();
        btnMovenext = new javax.swing.JButton();
        btnmovelast = new javax.swing.JButton();
        pnlDanhSach = new javax.swing.JPanel();
        pnlTimKiem = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        scplist = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblTieuDe.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tblTieuDe.setForeground(new java.awt.Color(51, 51, 255));
        tblTieuDe.setText("QUẢN LÝ NGƯỜI HỌC");
        tblTieuDe.setToolTipText("");

        txtMaNguoiHoc.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtMaNguoiHoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNguoiHocActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Mã người học");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Họ và tên");

        txtHoTen.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtHoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHoTenActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("Giới tính");

        buttonGroup1.add(rdoNam);
        rdoNam.setText("Nam");

        buttonGroup1.add(rdoNu);
        rdoNu.setText("Nữ");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText("Ngày sinh");

        txtNgaySinh.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setText("Đia chỉ email");

        txtEmail.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel7.setText("Điện thoại");

        txtDienThoai.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDienThoaiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThongtinLayout = new javax.swing.GroupLayout(pnlThongtin);
        pnlThongtin.setLayout(pnlThongtinLayout);
        pnlThongtinLayout.setHorizontalGroup(
            pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtHoTen)
                    .addGroup(pnlThongtinLayout.createSequentialGroup()
                        .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(pnlThongtinLayout.createSequentialGroup()
                                .addComponent(rdoNam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rdoNu))
                            .addComponent(jLabel4))
                        .addGap(239, 239, 239)
                        .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNgaySinh)
                            .addGroup(pnlThongtinLayout.createSequentialGroup()
                                .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(txtMaNguoiHoc)
                    .addGroup(pnlThongtinLayout.createSequentialGroup()
                        .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlThongtinLayout.createSequentialGroup()
                        .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtEmail)))
                .addContainerGap())
        );
        pnlThongtinLayout.setVerticalGroup(
            pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThongtinLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNguoiHoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongtinLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlThongtinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlThongtinLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addGap(38, 38, 38))))
        );

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ghi chú:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16))); // NOI18N
        jScrollPane1.setViewportView(taGhiChu);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        pnlbtn1.add(btnThem);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        pnlbtn1.add(btnSua);

        btnMoi.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnMoi.setText("Mới");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });
        pnlbtn1.add(btnMoi);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        pnlbtn1.add(btnXoa);

        btnFirst.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnFirst.setText("Frist");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        pnlbtn2.add(btnFirst);

        btnMovePrev.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnMovePrev.setText("Prev");
        btnMovePrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePrevActionPerformed(evt);
            }
        });
        pnlbtn2.add(btnMovePrev);

        btnMovenext.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnMovenext.setText("Next");
        btnMovenext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovenextActionPerformed(evt);
            }
        });
        pnlbtn2.add(btnMovenext);

        btnmovelast.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnmovelast.setText("Last");
        btnmovelast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmovelastActionPerformed(evt);
            }
        });
        pnlbtn2.add(btnmovelast);

        javax.swing.GroupLayout pnlCapNhatLayout = new javax.swing.GroupLayout(pnlCapNhat);
        pnlCapNhat.setLayout(pnlCapNhatLayout);
        pnlCapNhatLayout.setHorizontalGroup(
            pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlThongtin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlCapNhatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCapNhatLayout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(pnlCapNhatLayout.createSequentialGroup()
                        .addComponent(pnlbtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(pnlbtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        pnlCapNhatLayout.setVerticalGroup(
            pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCapNhatLayout.createSequentialGroup()
                .addComponent(pnlThongtin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlbtn1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlbtn2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Tab.addTab("Cập Nhật", pnlCapNhat);

        pnlTimKiem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm Kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 16))); // NOI18N

        txtTimKiem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnTimKiem.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTimKiemLayout = new javax.swing.GroupLayout(pnlTimKiem);
        pnlTimKiem.setLayout(pnlTimKiemLayout);
        pnlTimKiemLayout.setHorizontalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem)
                .addContainerGap())
        );
        pnlTimKiemLayout.setVerticalGroup(
            pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTimKiemLayout.createSequentialGroup()
                .addGroup(pnlTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap())
        );

        scplist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scplistMouseClicked(evt);
            }
        });

        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblList.setRowHeight(25);
        tblList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListMouseClicked(evt);
            }
        });
        scplist.setViewportView(tblList);

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDanhSachLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(scplist, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE))
                    .addGroup(pnlDanhSachLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scplist, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Tab.addTab("Danh Sách", pnlDanhSach);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(Tab, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tab))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaNguoiHocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNguoiHocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNguoiHocActionPerformed

    private void txtHoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHoTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHoTenActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.moveFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnMovePrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePrevActionPerformed
        this.movePrevious();
    }//GEN-LAST:event_btnMovePrevActionPerformed

    private void btnMovenextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovenextActionPerformed
        this.moveNext();
    }//GEN-LAST:event_btnMovenextActionPerformed

    private void btnmovelastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmovelastActionPerformed
        this.moveLast();
    }//GEN-LAST:event_btnmovelastActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        this.search();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void scplistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scplistMouseClicked
        
    }//GEN-LAST:event_scplistMouseClicked

    private void tblListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListMouseClicked
        if(evt.getClickCount() == 2){
            this.row = tblList.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblListMouseClicked

    private void txtDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDienThoaiActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LearnerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LearnerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LearnerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LearnerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LearnerJDialog dialog = new LearnerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tab;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnMovePrev;
    private javax.swing.JButton btnMovenext;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnmovelast;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlCapNhat;
    private javax.swing.JPanel pnlDanhSach;
    private javax.swing.JPanel pnlThongtin;
    private javax.swing.JPanel pnlTimKiem;
    private javax.swing.JPanel pnlbtn1;
    private javax.swing.JPanel pnlbtn2;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JScrollPane scplist;
    private javax.swing.JTextField taGhiChu;
    private javax.swing.JTable tblList;
    private javax.swing.JLabel tblTieuDe;
    private javax.swing.JTextField txtDienThoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtMaNguoiHoc;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables


    @Override
    public void setForm(NguoiHoc Entity) {
        txtMaNguoiHoc.setText(Entity.getMaNH());
        txtHoTen.setText(Entity.getHoTen());
        txtNgaySinh.setText(XDate.toString(Entity.getNgaySinh(),"MM/dd/yyyy"));
        txtDienThoai.setText(Entity.getDienThoai());
        txtEmail.setText(Entity.getEmail());
        if(Entity.getGioiTinh() == true){
            rdoNam.setSelected(true);
        }else{
            rdoNu.setSelected(true);
        }
        taGhiChu.setText(Entity.getGhiChu());
    }

    @Override
    public NguoiHoc getForm() {
            NguoiHoc nh = new NguoiHoc();
            nh.setMaNH(txtMaNguoiHoc.getText());
            nh.setHoTen(txtHoTen.getText());
            nh.setGioiTinh(rdoNam.isSelected());
            nh.setDienThoai(txtDienThoai.getText());
            nh.setEmail(txtEmail.getText());
        try {
            nh.setNgaySinh(XDate.toDate(txtNgaySinh.getText(), "MM/dd/yyyy"));
        } catch (ParseException ex) {
            Logger.getLogger(LearnerJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
            nh.setGhiChu(taGhiChu.getText());
            nh.setMaNV(Auth.user.getMaNV());
            nh.setNgayDK(new Date());
            return nh;
    }
    
    NguoiHocImpl dao = new NguoiHocImpl();
    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblList.getModel();
        model.setRowCount(0);
       
        try {
            String keyword = txtTimKiem.getText();
            List<NguoiHoc> list = dao.SelectByKeyWord(keyword);
            for(NguoiHoc nh: list){
                Object [] values = {
                    nh.getMaNH(),
                    nh.getHoTen(),
                    nh.getGioiTinh()?"Nam":"Nữ",
                    XDate.toString(nh.getNgaySinh(), "MM/dd/yyyy"),
                    nh.getDienThoai(),
                    nh.getEmail(),
                    nh.getMaNV(),
                    XDate.toString(nh.getNgayDK(), "MM/dd/yyyy")
                };
                model.addRow(values);
            }
        } 
        catch (Exception e) {
            XMsgBox.alert(null,"Lỗi truy vẫn dữ liệu");
        }
    }

    @Override
    public void search() {
        this.fillToTable();
        this.clearForm();
        this.updateStatus();
   }

    @Override
    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblList.getRowCount() - 1);
        // Trạng thái form
        txtMaNguoiHoc.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        
        // Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnMovePrev.setEnabled(edit && !first);
        btnMovenext.setEnabled(edit && !last);
        btnmovelast.setEnabled(edit && !last);
    }

    @Override
    public void moveFirst() {
        this.row = 0;
        this.edit();
    }

    @Override
    public void movePrevious() {
        if(this.row > 0){
            --this.row;
            this.edit();
        }
    }

    @Override
    public void moveLast() {
        this.row = tblList.getRowCount() - 1;
        this.edit();
    }

    @Override
    public void moveNext() {
        if(this.row < tblList.getRowCount() - 1){
            ++this.row;
            this.edit();
        }
    }

    @Override
    public void insert() {
        if(this.checkMaNH(txtMaNguoiHoc.getText())){
            NguoiHoc nh = this.getForm();
            try {
                dao.insert(nh);
                this.fillToTable();
                this.row = -1;
                this.updateStatus();
                XMsgBox.alert(null,"Thao tác thành công.");
            } catch (Exception e) {
                XMsgBox.alert(null,"Thao tác thất bại.");
            }
        }else{
            XMsgBox.alert(null,"Mã người học đã tồn tại !!");
        }
    }

    
    @Override
    public void update() {
        Date curdate = new Date();
        if(XCheck.checkDate(txtNgaySinh.getText(),XDate.toString(curdate, "MM/dd/yyyy") ,"MM/dd/yyyy" )){
            if(this.checksdt()== false){
                XMsgBox.alert(null,"Lỗi định dạng số điện thoại !!");
            }else{
                NguoiHoc model = this.getForm();
                dao.update(model);
                this.fillToTable();
                XMsgBox.alert(null,"Cập nhật thành công"); 
            }
        }else{
            XMsgBox.alert(null,"Lỗi ngày sinh lớn hơn ngày hiện tại !!");
        }
         
    }

    @Override
    public void delete() {
       NguoiHoc nh = this.getForm();
        try {
           
            if(!Auth.isManager()){
                XMsgBox.alert(null,"Bạn không có quyên xóa.");
            }else{
                dao.delete(nh.getMaNH());
                this.fillToTable();
                this.clearForm();
                this.row = -1;
                this.updateStatus();
                XMsgBox.alert(null,"Thao tác thành công.");
            }
        } catch (Exception e) {
             XMsgBox.alert(null,"Thao tác thất bại.");
        }
      
    }

    @Override
    public void edit() {
        String manh = (String) tblList.getValueAt(this.row, 0);
        NguoiHoc nh = (NguoiHoc)dao.selectByID(manh);
        try {
            
            this.setForm(nh);
            this.updateStatus();
            Tab.setSelectedIndex(0);
        } catch (Exception e) {
            XMsgBox.alert(null,"Lỗi truy vẫn dữ liệu !! ");
        }
        
    }

    @Override
    public void clearForm() {
        NguoiHoc nh = new NguoiHoc();
        nh.setMaNV(Auth.user.getMaNV());
        this.setForm(nh);
        this.row = -1;
        this.updateStatus();
   }

    @Override
    public void initialize() {
        if(!Auth.isLogin()){
            XMsgBox.alert(null,"Error");
            System.exit(0);
        }
        DefaultTableModel model = (DefaultTableModel) tblList.getModel();
        this.setLocationRelativeTo(null);
        this.setTitle("EduSys - Quản lý người học");
        String Namefield [] = {"MÃ NH","HỌ VÀ TÊN","GIỚI TÍNH","NGÀY SINH","ĐIỆN THOẠI","EMAIL","MÃ NV","NGÀY ĐK"};
        model.setColumnIdentifiers(Namefield);
        this.fillToTable();
        this.row = -1;
        this.updateStatus();
        Tab.setSelectedIndex(1);
    }
   
    private boolean checksdt(){
        String sdt = "0\\d{9,10}";
        if(!txtDienThoai.getText().matches(sdt)){
            return false;
        }
        return true;
    }
    
    private boolean checkMaNH(String manh){
        NguoiHoc nh = dao.selectByID(manh);
        if(nh == null)
            return true;
        else
            return false;
    }
}
