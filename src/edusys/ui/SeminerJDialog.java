
package EduSys.ui;

import EduSys.Controller.ChuyenDeController;
import EduSys.UTILS.XImage;
import EduSys.dao.impl.ChuyenDeImpl;
import EduSys.entity.ChuyenDe;
import EduSys.utils.Auth;
import EduSys.utils.XMsgBox;
import java.awt.Image;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;


public class SeminerJDialog extends javax.swing.JDialog implements ChuyenDeController{
    int row = -1;
    
    public SeminerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        Tabs = new javax.swing.JTabbedPane();
        tabDanhSach = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChuyenDe = new javax.swing.JTable();
        tpnlCapNhat = new javax.swing.JPanel();
        lblHinhLogo = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        txtMaCD = new javax.swing.JTextField();
        lblMaCD = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblThoiLuong = new javax.swing.JLabel();
        lblHocPhi = new javax.swing.JLabel();
        lblMoTa = new javax.swing.JLabel();
        txtTenCD = new javax.swing.JTextField();
        txtThoiLuong = new javax.swing.JTextField();
        txtHocPhi = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMoTa = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnMovePrevious = new javax.swing.JButton();
        btnMoveNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblTieuDe = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabDanhSach.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        tblChuyenDe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChuyenDe.setRowHeight(25);
        tblChuyenDe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChuyenDeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblChuyenDe);

        javax.swing.GroupLayout tabDanhSachLayout = new javax.swing.GroupLayout(tabDanhSach);
        tabDanhSach.setLayout(tabDanhSachLayout);
        tabDanhSachLayout.setHorizontalGroup(
            tabDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE)
        );
        tabDanhSachLayout.setVerticalGroup(
            tabDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDanhSachLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        Tabs.addTab("DANH SÁCH", tabDanhSach);

        tpnlCapNhat.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        lblHinhLogo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Times New Roman", 0, 16), new java.awt.Color(51, 102, 255)), "Hình Logo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Times New Roman", 0, 16))); // NOI18N
        lblHinhLogo.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblHinhLogo.setLayout(new java.awt.GridLayout(1, 0));

        lblLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblLogoMouseEntered(evt);
            }
        });
        lblHinhLogo.add(lblLogo);

        txtMaCD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N

        lblMaCD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblMaCD.setText("Mã Chuyên Đề");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Tên Chuyên Đề");

        lblThoiLuong.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblThoiLuong.setText("Thời Lượng(Giờ)");

        lblHocPhi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblHocPhi.setText("Học Phí");

        lblMoTa.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        lblMoTa.setText("Mô tả chuyên đề");

        txtTenCD.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtTenCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenCDActionPerformed(evt);
            }
        });

        txtThoiLuong.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtThoiLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThoiLuongActionPerformed(evt);
            }
        });

        txtHocPhi.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        txtHocPhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHocPhiActionPerformed(evt);
            }
        });

        taMoTa.setColumns(20);
        taMoTa.setRows(5);
        jScrollPane2.setViewportView(taMoTa);

        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);

        btnSua.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);

        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnReset.setText("Làm mới");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset);

        btnFirst.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnFirst.setText("Frist");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });
        jPanel3.add(btnFirst);

        btnMovePrevious.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnMovePrevious.setText("Prev");
        btnMovePrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMovePreviousActionPerformed(evt);
            }
        });
        jPanel3.add(btnMovePrevious);

        btnMoveNext.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnMoveNext.setText("Next");
        btnMoveNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveNextActionPerformed(evt);
            }
        });
        jPanel3.add(btnMoveNext);

        btnLast.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnLast.setText("Last");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel3.add(btnLast);

        javax.swing.GroupLayout tpnlCapNhatLayout = new javax.swing.GroupLayout(tpnlCapNhat);
        tpnlCapNhat.setLayout(tpnlCapNhatLayout);
        tpnlCapNhatLayout.setHorizontalGroup(
            tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                        .addComponent(lblHinhLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addGroup(tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaCD)
                            .addComponent(txtTenCD)
                            .addComponent(txtThoiLuong)
                            .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                                .addGroup(tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMaCD)
                                    .addComponent(jLabel3)
                                    .addComponent(lblThoiLuong)
                                    .addComponent(lblHocPhi))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtHocPhi)))
                    .addComponent(jScrollPane2)
                    .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                        .addComponent(lblMoTa)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tpnlCapNhatLayout.setVerticalGroup(
            tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tpnlCapNhatLayout.createSequentialGroup()
                        .addComponent(lblMaCD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMaCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenCD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblThoiLuong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtThoiLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHocPhi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHocPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblHinhLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblMoTa)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tpnlCapNhatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        Tabs.addTab("CẬP NHẬT", tpnlCapNhat);

        lblTieuDe.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(0, 0, 255));
        lblTieuDe.setText("Quản Lý Chuyên Đề");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Tabs, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTieuDe)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(lblTieuDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtHocPhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHocPhiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHocPhiActionPerformed

    private void txtThoiLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThoiLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThoiLuongActionPerformed

    private void txtTenCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenCDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenCDActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        this.update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void lblLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoMouseClicked
        this.setImage();
    }//GEN-LAST:event_lblLogoMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        this.insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.moveFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnMovePreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMovePreviousActionPerformed
        this.movePrevious();
    }//GEN-LAST:event_btnMovePreviousActionPerformed

    private void btnMoveNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveNextActionPerformed
        this.moveNext();
    }//GEN-LAST:event_btnMoveNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.moveLast();
    }//GEN-LAST:event_btnLastActionPerformed

    private void tblChuyenDeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChuyenDeMouseClicked
        if(evt.getClickCount() == 2){
            this.row = tblChuyenDe.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblChuyenDeMouseClicked

    private void lblLogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblLogoMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeminerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeminerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeminerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeminerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SeminerJDialog dialog = new SeminerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Tabs;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnMoveNext;
    private javax.swing.JButton btnMovePrevious;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JPanel lblHinhLogo;
    private javax.swing.JLabel lblHocPhi;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMaCD;
    private javax.swing.JLabel lblMoTa;
    private javax.swing.JLabel lblThoiLuong;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JTextArea taMoTa;
    private javax.swing.JPanel tabDanhSach;
    private javax.swing.JTable tblChuyenDe;
    private javax.swing.JPanel tpnlCapNhat;
    private javax.swing.JTextField txtHocPhi;
    private javax.swing.JTextField txtMaCD;
    private javax.swing.JTextField txtTenCD;
    private javax.swing.JTextField txtThoiLuong;
    // End of variables declaration//GEN-END:variables
public void init(){
    
    }

    @Override
    public void setImage() {
        JFileChooser chooser = new JFileChooser();
        if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File file = chooser.getSelectedFile();
            XImage.save(file);
            this.prepareSetImage(file.getName());
        }
    }

    @Override
    public void moveFirst() {
        this.row = 0; 
        this.edit();
    }

    @Override
    public void movePrevious() {
        if(this.row > 0){
            --row;
            this.edit();
        }
    }

    @Override
    public void moveLast() {
        this.row = tblChuyenDe.getRowCount() - 1;
        this.edit();
    }

    @Override
    public void moveNext() {
        if(this.row < tblChuyenDe.getRowCount() - 1){
            ++row;
            this.edit();
        }
    }

    @Override
    public void initialize() {
        if(!Auth.isLogin()){
            System.exit(0);
        }
        Tabs.setSelectedIndex(0);
        this.setLocationRelativeTo(null);
        DefaultTableModel model = (DefaultTableModel)tblChuyenDe.getModel();
        this.setIconImage(XImage.getAppIcon());
        this.setTitle("EduSys - Quản Lý Chuyên Đề");
        String nameField [] = {"MÃ CD","TÊN CD","HỌC PHÍ","THỜI LƯỢNG","HÌNH"};
        model.setColumnIdentifiers(nameField);
        this.fillToTable();
        this.row = -1 ;
        this.updateStatus();
    }

    @Override
    public void insert() {
        try {
            ChuyenDe cd = this.getForm();
            try {
                dao.insert(cd);
                this.fillToTable();
                this.clearForm();
                this.updateStatus();
                XMsgBox.alert(null,"Thêm chuyên đề thành công.");
            } catch (Exception e) {
                XMsgBox.alert(null,"Thêm chuyên đề thất bại !!");
            }
        } catch (Exception e) {
            XMsgBox.alert(null,"Thông tin chuyên đề đang trống !!");
        }
            
        
        
    }

    @Override
    public void update() {
        if(this.check() == true){
            ChuyenDe cd = this.getForm();
        try {
            dao.update(cd);
            this.fillToTable();
            this.clearForm();
            XMsgBox.alert(null,"cập nhật thành công.");
        } catch (Exception e) {
            XMsgBox.alert(null,"Cập nhật thất bại !!");
        }
        }else{
            XMsgBox.alert(null,"Sai khung học phí !!");
        }
    }

    @Override
    public void delete() {
        if(!Auth.isManager()){
            XMsgBox.alert(null,"Bạn không có quyền xóa.");
        }else{
            ChuyenDe cd = this.getForm();
            try {
                dao.delete(cd.getMaCD());
                this.fillToTable();
                this.clearForm();
                XMsgBox.alert(null,"Xóa chuyên đề thành công.");
            } catch (Exception e) {
                XMsgBox.alert(null,"Xóa chuyên đề thất bại !!");
            }
        }
    }
    
    
    private void prepareSetImage(String nameFile){
        try {
            ImageIcon Icon = XImage.read(nameFile);
            lblLogo.setIcon(Icon);
            Image im = Icon.getImage().getScaledInstance(lblLogo.getWidth(),    lblLogo.getHeight(),Image.SCALE_SMOOTH );
            Icon.setImage(im);
            lblLogo.setToolTipText(nameFile);
        } catch (Exception e) {
            XMsgBox.alert(null,"Ảnh không có sẵn .");
        }
        
    }
    @Override
    public void edit() {
        String macd = (String)tblChuyenDe.getValueAt(this.row, 0);
        ChuyenDe cd = dao.selectByID(macd);
        txtMaCD.setText(cd.getMaCD());
        txtTenCD.setText(cd.getTenCD());
        txtThoiLuong.setText(cd.getThoiLuong() + "");
        txtHocPhi.setText(cd.getHocPhi() + "");
        taMoTa.setText(cd.getMoTa());
        try {
            this.prepareSetImage(cd.getHinh());
        } catch (Exception e) {
        }
        Tabs.setSelectedIndex(1);
        this.updateStatus();
   }

    @Override
    public void clearForm() {
        txtMaCD.setText("");
        txtTenCD.setText("");
        txtThoiLuong.setText("");
        txtHocPhi.setText("");
        taMoTa.setText("");
        lblLogo.setIcon(null);
        this.row = -1;
        this.updateStatus();
    }

    @Override
    public void setForm(ChuyenDe Entity) {
        txtMaCD.setText(Entity.getMaCD());
        txtTenCD.setText(Entity.getTenCD());
        txtThoiLuong.setText(Entity.getThoiLuong() + "");
        txtHocPhi.setText(Entity.getHocPhi() + "");
        taMoTa.setText(Entity.getMoTa());
        lblLogo.setIcon(null);
        lblLogo.setToolTipText("");
    }

    @Override
    public ChuyenDe getForm() {
        ChuyenDe cd = new ChuyenDe();
            cd.setMaCD(txtMaCD.getText());
            cd.setTenCD(txtTenCD.getText());
            cd.setThoiLuong(Integer.valueOf(txtThoiLuong.getText()));
            cd.setHocPhi(Double.valueOf(txtHocPhi.getText()));
            cd.setMoTa(taMoTa.getText());
            cd.setHinh(lblLogo.getToolTipText());
        return cd; 
    }

    ChuyenDeImpl dao = new ChuyenDeImpl();
    @Override
    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel)tblChuyenDe.getModel();
        model.setRowCount(0);
        try {
            List<ChuyenDe> list = dao.selectAll();
            for(ChuyenDe cd: list){
                Object [] values = {
                    cd.getMaCD(),
                    cd.getTenCD(),
                    cd.getHocPhi(),
                    cd.getThoiLuong(),
                    cd.getHinh()
                };
                model.addRow(values);
            }
        } catch (Exception e){
            XMsgBox.alert(null,"Lỗi truy vẫn dữ liệu");
        }
      
    }

    @Override
    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0) ;
        boolean last = (this.row == tblChuyenDe.getRowCount() - 1 );
        // Trạng thái form //
        txtMaCD.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);
        // Các button diều hướng //
        btnFirst.setEnabled(!first && edit);
        btnMovePrevious.setEnabled(!first && edit);
        btnMoveNext.setEnabled(!last && edit);
        btnLast.setEnabled(!last && edit);
        
    }
    private boolean check(){
        int thoiluong = Integer.valueOf(txtThoiLuong.getText());
        Double hocphi = Double.valueOf(txtHocPhi.getText());
        if(hocphi < 0 ){
            return false;
        }
        return true;
    }
    
}

